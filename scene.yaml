cameras:
    perspective:
        type: perspective
        # type: isometric
        axis: [0, -10]
        vanishing_point: [0, 0]
        # focal_length: 170
lights:
    directional1:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .7
        ambient: .5
styles:
    tilt:
        base: polygons
        animated: true
        shaders:
            blocks:
                global: |
                    mat3 rotateX3D(float phi){
                        return mat3(
                            vec3(1.,0.,0.),
                            vec3(0.,cos(phi),-sin(phi)),
                            vec3(0.,sin(phi),cos(phi)));
                    }
                    mat3 rotateZ3D(float psi){
                        return mat3(
                            vec3(cos(psi),-sin(psi),0.),
                            vec3(sin(psi),cos(psi),0.),
                            vec3(0.,0.,1.));
                    }
                position: |
                    float t = u_time*0.05; 
                    position.xyz = rotateX3D(.85) * rotateZ3D(sin(t*2.)*.5) * position.xyz;
                    position.y += 200.;
                    position.z += 5000.;
    tilt-lines:
         base: lines
         mix: tilt  

    buildings:
        base: polygons
        shaders:
            blocks:
                color: |
                    color.rgb *= vec3(min((v_world_position.z*.001 + .5),1.));
    redline:
        mix: tilt-lines
        blend: overlay
    sfneg5:
        mix: redline
        shaders:
            uniforms:
                u_alpha_5: 1.
            blocks:
                color: |
                    color.a = u_alpha_5;
    sf0:
        mix: redline
        shaders:
            uniforms:
                u_alpha0: 0.
            blocks:
                color: |
                    color.a = u_alpha0;
    sf5:
        mix: redline
        shaders:
            uniforms:
                u_alpha5: 0.
            blocks:
                color: |
                    color.a = u_alpha5;
    sf10:
        mix: redline
        shaders:
            uniforms:
                u_alpha10: 0.
            blocks:
                color: |
                    color.a = u_alpha10;
    sf15:
        mix: redline
        shaders:
            uniforms:
                u_alpha15: 0.
            blocks:
                color: |
                    color.a = u_alpha15;
    sf20:
        mix: redline
        shaders:
            uniforms:
                u_alpha20: 0.
            blocks:
                color: |
                    color.a = u_alpha20;
sources:
    osm:
        type: TopoJSONTiles
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson
    sfneg5:
        type: GeoJSON
        url:  sfcontours--5.json
    sf0:
        type: GeoJSON
        url:  sfcontours-0.json
    sf5:
        type: GeoJSON
        url:  sfcontours-5.json
    sf10:
        type: GeoJSON
        url:  sfcontours-10.json
    sf15:
        type: GeoJSON
        url:  sfcontours-15.json
    sf20:
        type: GeoJSON
        url:  sfcontours-20.json
layers:
    water:
        data: { source: osm }
        draw:
            tilt:
                order: 2
                color: '#222'
    earth:
        data: { source: osm }
        draw:
            tilt:
                order: 0
                color: '#333'
    # landuse:
    #     data: { source: osm }
    #     draw:
    #         tilt:
    #             order: 1
    #             color: '#444'
    roads:
        data: { source: osm }
        filter:
            not: {is_tunnel: yes}
        draw:
            tilt-lines:
                order: 2
                color: '#555'
                width: 5
    # buildings:
    #     data: { source: osm }
    #     draw:
    #         polygons:
    #             order: 50
    #             color: '#999'
        # extruded:
        #     draw:
        #         polygons:
        #             style: buildings
                    # extrude: function () { return feature.height > 0 || $zoom >= 16; }

    # road_labels:
    #     data: { source: osm, layer: roads }
    #     filter: { name: true, aeroway: false, tunnel: false, railway: false, not: { kind: rail } }

    #     highway:
    #         filter: { kind: highway, $zoom: { min: 7 } }
    #         draw:
    #             text:
    #                 font:
    #                     fill: white
    #                     typeface: 500 12px Helvetica
    #     not_highway:
    #         filter: { not: { kind: highway }, $zoom: { min: 13 } }
    #         draw:
    #             text:
    #                 font:
    #                     fill: white
    #                     typeface: 100 11px Helvetica
    sfneg5:
        data: { source: sfneg5 }
        draw:
            sfneg5:
                order: 100
                width: 2px
                color: lightblue
                z: -5
    sf0:
        data: { source: sf0 }
        draw:
            sf0:
                order: 100
                width: 2px
                color: lightblue
                z: 0
    sf5:
        data: { source: sf5 }
        draw:
            sf5:
                order: 100
                width: 2px
                color: lightblue
                z: 50
    sf10:
        data: { source: sf10 }
        draw:
            sf10:
                order: 100
                width: 2px
                color: lightblue
                z: 100
    sf15:
        data: { source: sf15 }
        draw:
            sf15:
                order: 100
                width: 2px
                color: lightblue
                z: 150
    sf20:
        data: { source: sf20 }
        draw:
            sf20:
                order: 100
                width: 2px
                color: lightblue
                z: 200
